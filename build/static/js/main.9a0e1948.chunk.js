(this["webpackJsonprandom-popquiz"]=this["webpackJsonprandom-popquiz"]||[]).push([[0],{13:function(n,t,e){},3:function(n,t,e){n.exports=e(4)},4:function(n,t,e){"use strict";e.r(t);var o=e(0),r=e.n(o),i=e(2),a=e.n(i);e(13);document.title="Random Popquiz";const c=["\ud83e\udd13","\ud83e\udde0","\ud83d\udc68\u200d\ud83d\udd2c","\ud83d\udc69\u200d\ud83d\udd2c","\ud83e\udd16","\ud83d\udcbb","\ud83d\udcda"];function s(){const[n,t]=Object(o.useState)([]);return Object(o.useEffect)(()=>{const n=4*c.length,e=[];for(let t=0;t<n;t++)e.push({emoji:c[t%c.length],left:100*Math.random()+"%",animationDelay:5*Math.random()+"s",animationDuration:5*Math.random()+10+"s",fontSize:40*Math.random()+40+"px"});t(e)},[]),r.a.createElement("div",{className:"nerd-background"},n.map((n,t)=>r.a.createElement("span",{key:t,className:"falling-emoji",style:{left:n.left,animationDelay:n.animationDelay,animationDuration:n.animationDuration,fontSize:n.fontSize}},n.emoji)))}function u(){return r.a.createElement("div",{className:"App"},r.a.createElement(s,null),r.a.createElement("div",{className:"App-header"},r.a.createElement("h1",null,"Random Popquiz"),r.a.createElement("button",{onClick:()=>{window.open("","_blank").document.write("\n      <html>\n        <head>\n          <title>Random Popquiz</title>\n          <style>\n            body {\n              background-color: #FFFF00;\n              margin: 0;\n              padding: 20px;\n              font-family: Arial, sans-serif;\n              display: flex;\n              justify-content: center;\n              align-items: center;\n              height: 100vh;\n              transition: background-color 0.5s ease;\n            }\n            #countdown {\n              font-size: 100px;\n              color: black;\n              text-align: center;\n            }\n            #quiz-content {\n              display: none;\n              width: 100%;\n              max-width: 600px;\n            }\n            h1 {\n              color: black;\n              text-align: center;\n            }\n            .question {\n              background-color: #E6D000;\n              border-radius: 10px;\n              padding: 20px;\n              margin-bottom: 20px;\n              box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n            }\n            button {\n              display: block;\n              width: 100%;\n              padding: 10px;\n              margin-top: 10px;\n              background-color: rgba(255, 255, 255, 0.6);\n              color: black;\n              border: none;\n              border-radius: 5px;\n              cursor: pointer;\n              transition: background-color 0.3s;\n            }\n            button:hover {\n              background-color: rgba(255, 255, 255, 0.8);\n            }\n            .correct {\n              background-color: rgba(76, 175, 80, 0.8) !important;\n            }\n            .incorrect {\n              background-color: rgba(244, 67, 54, 0.8) !important;\n            }\n            #score {\n              position: fixed;\n              top: 20px;\n              right: 20px;\n              background-color: rgba(0, 0, 0, 0.7);\n              color: white;\n              padding: 10px 15px;\n              border-radius: 5px;\n              font-size: 18px;\n              font-weight: bold;\n              z-index: 1000;\n            }\n            #timer {\n              position: fixed;\n              bottom: 20px;\n              right: 20px;\n              background-color: rgba(0, 0, 0, 0.7);\n              color: white;\n              padding: 10px 15px;\n              border-radius: 5px;\n              font-size: 18px;\n              font-weight: bold;\n              z-index: 1000;\n            }\n\n            .confetti {\n              position: absolute;\n              width: 10px;\n              height: 10px;\n              background-color: #f2d74e;\n              opacity: 0;\n            }\n\n            @keyframes confetti-fall {\n              0% { transform: translateY(0) rotate(0deg); opacity: 1; }\n              100% { transform: translateY(100vh) rotate(720deg); opacity: 0; }\n            }\n\n            .try-again-btn {\n              display: inline-block;\n              padding: 10px 20px;\n              font-size: 16px;\n              background-color: #4CAF50;\n              color: white;\n              border: none;\n              border-radius: 5px;\n              cursor: pointer;\n              transition: background-color 0.3s;\n            }\n\n            .try-again-btn:hover {\n              background-color: #45a049;\n            }\n          </style>\n        </head>\n        <body>\n          <div id=\"score\">Score: 0 / 0</div>\n          <div id=\"timer\">Time: 40</div>\n          <div id=\"countdown\">3</div>\n          <div id=\"quiz-content\">\n            <h1>Random Popquiz</h1>\n            <div id=\"question-container\"></div>\n          </div>\n          <script>\n            let questions = [];\n            let currentQuestion = 0;\n            let score = 0;\n            let timer;\n            let timeLeft = 40;\n\n            async function fetchQuestions() {\n              try {\n                const response = await fetch('https://opentdb.com/api.php?amount=10&type=multiple');\n                if (!response.ok) {\n                  throw new Error('Failed to fetch questions');\n                }\n                const data = await response.json();\n                questions = data.results.map(q => ({\n                  question: q.question,\n                  answers: [...q.incorrect_answers, q.correct_answer],\n                  correct: q.correct_answer\n                }));\n                questions.forEach(q => shuffleArray(q.answers));\n                shuffleArray(questions);\n                updateScore();\n                startQuiz();\n              } catch (error) {\n                console.error('Error fetching questions:', error);\n                document.getElementById('question-container').innerHTML = '<p>Failed to load questions. Please try again later.</p>';\n              }\n            }\n\n            function shuffleArray(array) {\n              for (let i = array.length - 1; i > 0; i--) {\n                const j = Math.floor(Math.random() * (i + 1));\n                [array[i], array[j]] = [array[j], array[i]];\n              }\n            }\n\n            function startQuiz() {\n              document.getElementById('countdown').style.display = 'none';\n              document.getElementById('quiz-content').style.display = 'block';\n              showQuestion();\n              startTimer();\n            }\n\n            function showQuestion() {\n              document.body.style.backgroundColor = '#FFFF00';\n              const questionContainer = document.getElementById('question-container');\n              const question = questions[currentQuestion];\n              let html = `\n                <div class=\"question\">\n                  <h2>Question ${currentQuestion + 1}:</h2>\n                  <p>${decodeEntities(question.question)}</p>\n                  ${question.answers.map(answer => `\n                    <button onclick=\"checkAnswer(this, '${question.correct}')\">${decodeEntities(answer)}</button>\n                  `).join('')}\n                </div>\n              `;\n              questionContainer.innerHTML = html;\n              timeLeft = 40;\n              updateTimer();\n            }\n\n            function decodeEntities(text) {\n              const textArea = document.createElement('textarea');\n              textArea.innerHTML = text;\n              return textArea.value;\n            }\n\n            function checkAnswer(button, correctAnswer) {\n              clearInterval(timer);\n              const buttons = button.parentElement.getElementsByTagName('button');\n              for (let btn of buttons) {\n                btn.disabled = true;\n                if (btn.textContent === correctAnswer) {\n                  btn.classList.add('correct');\n                }\n              }\n              if (button.textContent === correctAnswer) {\n                score++;\n                button.classList.add('correct');\n              } else {\n                button.classList.add('incorrect');\n              }\n              updateScore();\n              setTimeout(nextQuestion, 2000);\n            }\n\n            function nextQuestion() {\n              currentQuestion++;\n              if (currentQuestion < questions.length) {\n                showQuestion();\n                startTimer();\n              } else {\n                endQuiz();\n              }\n            }\n\n            function startTimer() {\n              timer = setInterval(() => {\n                timeLeft--;\n                updateTimer();\n                if (timeLeft === 0) {\n                  clearInterval(timer);\n                  document.body.style.backgroundColor = '#B8B800';\n                  setTimeout(() => {\n                    nextQuestion();\n                  }, 1000);\n                }\n              }, 1000);\n            }\n\n            function updateTimer() {\n              document.getElementById('timer').textContent = `Time: ${timeLeft}`;\n            }\n\n            function updateScore() {\n              document.getElementById('score').textContent = `Score: ${score} / ${questions.length}`;\n            }\n\n            function endQuiz() {\n              clearInterval(timer);\n              document.getElementById('timer').style.display = 'none';\n              \n              if (score > 5) {\n                document.getElementById('question-container').innerHTML = `\n                  <h2>Congratulations!</h2>\n                  <p>Your final score is: ${score} / ${questions.length}</p>\n                `;\n                createConfetti();\n              } else {\n                document.getElementById('question-container').innerHTML = `\n                  <h2>Quiz Completed</h2>\n                  <p>Your final score is: ${score} / ${questions.length}</p>\n                  <p>Better luck next time!</p>\n                  <button class=\"try-again-btn\" onclick=\"restartQuiz()\">Try Again</button>\n                `;\n              }\n            }\n\n            function createConfetti() {\n              const confettiCount = 200;\n              const colors = ['#f2d74e', '#95c3de', '#ff9a91', '#f2b2f2', '#cefc86'];\n\n              for (let i = 0; i < confettiCount; i++) {\n                const confetti = document.createElement('div');\n                confetti.className = 'confetti';\n                confetti.style.left = Math.random() * 100 + 'vw';\n                confetti.style.animationDuration = Math.random() * 3 + 2 + 's';\n                confetti.style.animationDelay = Math.random() * 5 + 's';\n                confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];\n                confetti.style.animation = 'confetti-fall linear forwards';\n                document.body.appendChild(confetti);\n\n                setTimeout(() => {\n                  document.body.removeChild(confetti);\n                }, 5000);\n              }\n            }\n\n            function restartQuiz() {\n              currentQuestion = 0;\n              score = 0;\n              updateScore();\n              fetchQuestions();\n            }\n\n            let count = 3;\n            const countdownElement = document.getElementById('countdown');\n            \n            function updateCountdown() {\n              countdownElement.textContent = count;\n              if (count > 0) {\n                count--;\n                setTimeout(updateCountdown, 1000);\n              } else {\n                fetchQuestions();\n              }\n            }\n            \n            updateCountdown();\n          <\/script>\n        </body>\n      </html>\n    ")},className:"start-button"},"Click to start")))}a.a.createRoot(document.getElementById("root")).render(r.a.createElement(r.a.StrictMode,null,r.a.createElement(u,null)))}},[[3,1,2]]]);
//# sourceMappingURL=main.9a0e1948.chunk.js.map